<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xml" href="http://jonnyzzz.com/feed.xslt.xml"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <link href="http://jonnyzzz.com/feed-internal.xml" rel="self" type="application/atom+xml" />
  <link href="http://jonnyzzz.com/" rel="alternate" type="text/html" />
  <updated>2017-10-17T23:29:45+00:00</updated>
  <id>/</id>

  
  <title type="html">Eugene Petrenko</title>
  

  
  <subtitle>@jonnyzzz personal page and blog</subtitle>
  

  

  
  
  <entry>
    <title type="html">Package names clash detector for Gradle and Java 9 Modules</title>
    <link href="http://jonnyzzz.com/blog/2017/08/23/java9c/" rel="alternate" type="text/html" title="Package names clash detector for Gradle and Java 9 Modules" />
    <published>2017-08-23T00:00:00+00:00</published>
    <updated>2017-08-23T00:00:00+00:00</updated>
    <id>/blog/2017/08/23/java9c</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/08/23/java9c/">&lt;p&gt;Gradle plugin to help to migrate to Java 9 modules (aka project jigsaw)&lt;/p&gt;

&lt;p&gt;It was an amazing journey to the &lt;a href=&quot;https://www.oracle.com/javaone/index.html&quot;&gt;JavaOne&lt;/a&gt; this year. 
There I had a great chance to present some features of &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; on the huge 
stage. I liked it. I was also amazed by the backstage processes. So many people are involved in there.&lt;/p&gt;

&lt;p&gt;During those crazy times, I realized there is a problem for anyone willing to switch to Java 
modules. The problem is in packages. Every package is now allowed to be used only in 
one entry in the module path. It is still ok if you’re on classpath. For more information, 
you may consider &lt;a href=&quot;http://openjdk.java.net/projects/jigsaw/&quot;&gt;project jigsaw&lt;/a&gt;, 
&lt;a href=&quot;http://openjdk.java.net/jeps/261&quot;&gt;JEP 261&lt;/a&gt;,
&lt;a href=&quot;http://openjdk.java.net/projects/jigsaw/spec/issues/#AvoidConcealedPackageConflicts&quot;&gt;AvoidConcealedPackageConflicts&lt;/a&gt;, 
&lt;a href=&quot;https://blog.codefx.org/java/java-9-migration-guide/#Split-Packages&quot;&gt;Split Packages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first step in the migration to modules is to make sure there are no package name clashes 
between files. The best way to know that for sure is to have a tool that analyze 
classpath for conflicts. So I created the plugin for Gradle.&lt;/p&gt;

&lt;p&gt;Usage is pretty simple.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;org.jonnyzzz.java9c&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.2.1&amp;#39;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;/// Mind the updates!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once the plugin is applied, it adds the &lt;code&gt;java9c&lt;/code&gt; task. The task itself depends on several generated tasks for 
every source set, e.g., &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;. &lt;code&gt;java9c&lt;/code&gt; task, prints out the detected package conflicts for each source set.&lt;/p&gt;

&lt;p&gt;For the demonstration, I created a tiny project that has classes in the junit’s main package. The report looks like that:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jonnyzzz.com/images/posts/2017-10-18-task-output.png&quot; alt=&quot;java9c task out example image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For multiple project Gradle projects, you may include the plugin in the following way, or, alternatively, 
you may select only specific projects to check.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;org.jonnyzzz.java9c&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0.2.1&amp;#39;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;/// Mind the updates!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;subprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;org.jonnyzzz.java9c&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The plugin is open source. You may find sources on &lt;a href=&quot;https://github.com/jonnyzzz/gradle-java9c&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is so easy to create so many different features. This time I decided to create a feature-poor plugin. 
Meanwhile, I reserved the &lt;code&gt;java9c&lt;/code&gt; extension in Gradle for future features for the plugin.
Let me know if there is something I missed. Also, you may create a pull 
request &lt;a href=&quot;https://github.com/jonnyzzz/gradle-java9c&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;sources--binaries&quot;&gt;Sources &amp;amp; Binaries&lt;/h1&gt;

&lt;p&gt;Sources are on &lt;a href=&quot;https://github.com/jonnyzzz/gradle-java9c&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Plugin page on &lt;a href=&quot;https://plugins.gradle.org/plugin/org.jonnyzzz.java9c&quot;&gt;Gradle Plugins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have fun! And let me know if it helps.&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="gradle" />
  
    <category term="java" />
  
    <category term="jigsaw" />
  
    <category term="java9" />
  
    <category term="modules" />
  
    <category term="opensource" />
  
    <category term="plugin" />
  
    <summary type="html">Gradle plugin to help to migrate to Java 9 modules (aka project jigsaw)</summary>
  
  </entry>
  
  <entry>
    <title type="html">A Sudden SSH out-of-memory</title>
    <link href="http://jonnyzzz.com/blog/2017/08/23/ssh-oom/" rel="alternate" type="text/html" title="A Sudden SSH out-of-memory" />
    <published>2017-08-23T00:00:00+00:00</published>
    <updated>2017-08-23T00:00:00+00:00</updated>
    <id>/blog/2017/08/23/ssh-oom</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/08/23/ssh-oom/">&lt;p&gt;An accident and investigation of the server failure&lt;/p&gt;

&lt;p&gt;In this post, I am going to share an accident I had recently with
in-house production.&lt;/p&gt;

&lt;p&gt;Let’s assume we have an SSH server. Clients who call
commands through it. Quite simple, right?&lt;/p&gt;

&lt;p&gt;Of course, we cannot have only one SSH server. Instead, we run 
several SSH servers and use HAProxy to load-balance traffic 
to them. It is way more safe to have several servers, 
instead of one. For example, it simplifies maintenance, allows 
to easily implement 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Rolling_release&quot;&gt;Rolling Updates&lt;/a&gt;
or say 
&lt;a href=&quot;https://en.wikipedia.org/wiki/A/B_testing&quot;&gt;A/B Testing&lt;/a&gt;.
I &lt;a href=&quot;/blog/2017/05/24/ssh-haproxy/&quot;&gt;wrote in a previous post&lt;/a&gt;
more details on our HAProxy setup some time ago&lt;/p&gt;

&lt;h1 id=&quot;the-outage-as-seen-by-users&quot;&gt;The outage as seen by users&lt;/h1&gt;

&lt;p&gt;At some day, our users (as I can recreate from reports) started to see
strange connection timeouts from SSH server calls. The call they did was 
to download several gigabytes of data.&lt;/p&gt;

&lt;p&gt;From a user perspective, it’s totally OK to retry a command once it failed 
for the very first time. So they did it.&lt;/p&gt;

&lt;p&gt;After several retries, they tend to give up. At that time our system
was no longer capable of serving any SSH requests at all&lt;/p&gt;

&lt;h1 id=&quot;the-outage-as-seen-from-the-server-side&quot;&gt;The outage as seen from the server-side&lt;/h1&gt;

&lt;p&gt;We are running several SSH servers behind HAProxy. Servers were running 
in JVM. I use amazing &lt;a href=&quot;https://mina.apache.org/sshd-project/&quot;&gt;Apache Mina SSHD&lt;/a&gt;
to implement our &lt;a href=&quot;http://jonnyzzz.com/contrib/#apache-mina-sshd&quot;&gt;SSH server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Alerts appeared for our SSH servers. HAProxy started to drain traffic from dead SSH 
servers, based on health checks. It was good since other requests were still 
able to execute on still live servers.&lt;/p&gt;

&lt;p&gt;There were only two servers in our setup. So the system was too fast to be killed.&lt;/p&gt;

&lt;p&gt;All dead server had an out-of-memory (OOM) before death. Sadly, but it is 
hard to write an application that is can survive OOMs and continue to function. In our case, OOM
tended to kill either SSH server socket processing for either SSH or HTTP.&lt;/p&gt;

&lt;p&gt;The good side was that those SSH servers had not sensible state. Thus it was easy to restart
them to be back in business. So we had the workaround&lt;/p&gt;

&lt;h1 id=&quot;java-heap-dump-analysis&quot;&gt;Java heap dump analysis&lt;/h1&gt;

&lt;p&gt;By that time I had several memory dumps (.hprof) files from failed servers. It was
time to analyze what is there. 
All those failures were only because a send buffer was full of data, consuming the 
rest of heap memory. More detailed, I found a massive SSH session object.&lt;/p&gt;

&lt;p&gt;With more analysis, I found the whole memory was consumed by the write queue.&lt;/p&gt;

&lt;p&gt;A closer look in memory dumps and I was able to figure out the outage was caused by
a fresh &lt;a href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/putty/&quot;&gt;Putty&lt;/a&gt; client on Windows, e.g. 
&lt;code&gt;SSH-2.0-PuTTY_Release_0.69&lt;/code&gt;. At the time of the accident, it was the most recent version.&lt;/p&gt;

&lt;p&gt;The state was that I had an OOM issue downloading several gigabytes of data over the 
SSH with Putty client. It was time to write integration tests to reproduce the problem. 
I did it. I was able to test every putty client version. I tried &lt;code&gt;0.67&lt;/code&gt;, &lt;code&gt;0.68&lt;/code&gt; and &lt;code&gt;0.69&lt;/code&gt;.
The OOM problem was likely to be introduced in &lt;code&gt;0.68&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;client-problem-and-users&quot;&gt;Client problem and users&lt;/h1&gt;

&lt;p&gt;Memory snapshot analysis was helpful to realize the problem was with a specific 
version of an SSH client. I also knew, only users with fresh computers we reporting 
the issue too.&lt;/p&gt;

&lt;p&gt;It was evident I cannot do anything with the client. Users decided to use it for 
their reasons. Also, my SSH server implementation did not support the client 
filtering. Anyway, I’d be too hard to explain everyone the problem is probably with 
recent update of their software.&lt;/p&gt;

&lt;h1 id=&quot;debugging-the-problem&quot;&gt;Debugging the problem&lt;/h1&gt;

&lt;p&gt;Thanks to integration tests I did, I was also able to debug the problem and realize
the cause of the issue.&lt;/p&gt;

&lt;p&gt;I found the method, which handles all writes on the server: 
&lt;code&gt;org.apache.sshd.common.session.AbstractSession#writePacket(org.apache.sshd.common.util.buffer.Buffer)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Apache Mina SSHD server is async. Instead of writing data directly to the socket it 
enqueues the data and sends once the OS is ready for it.&lt;/p&gt;

&lt;p&gt;Also, the implementation writes messages to a dedicated queue while 
re-key process is running. This method is called for every SSH command 
channel writes too. SSH window size is checked before calling the method, so
the command writer is blocked to wait while queued messages are sent.&lt;/p&gt;

&lt;p&gt;In memory dumps of the session object, I saw the window was barely unlimited.
&lt;img src=&quot;/images/posts/2017-08-23-snapshot.jpg&quot; alt=&quot;Memory Snapshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Having unlimited window and a slow network is enough for a server to consume all memory
with messages queue. In my case SSH, command was streaming several gigabytes of data from memory.&lt;/p&gt;

&lt;p&gt;There are two questions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Why is it happening only now?&lt;/li&gt;
  &lt;li&gt;How can we avoid the problem?&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ssh-window-abuse&quot;&gt;SSH window abuse&lt;/h1&gt;

&lt;p&gt;As we know, SSH protocol uses windows to limit the number of data being queued. Why didn’t it work?&lt;/p&gt;

&lt;p&gt;It was easy to debug. I found out Putty was sending 2GB (e.g., signed integer max value) as the size 
of the receive window. Well, I saw no reason why. But having such a huge send window makes 
SSH server enqueue up to 2GB of data per session.&lt;/p&gt;

&lt;p&gt;An optimistic approach, as we are a victim of it, is to trust SSH client and use the window as-is.&lt;/p&gt;

&lt;p&gt;A defensive approach is to have an additional send window in SSH server to avoid blindly trusting a client.&lt;/p&gt;

&lt;h1 id=&quot;sshd-patch&quot;&gt;SSHD patch&lt;/h1&gt;

&lt;p&gt;Now it was more or less clear. The problem was in unlimited write queue and infinite send window. 
I created an issue for the Apache Mina SSHD project to let anyone know there is such a problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SSHD-754&quot;&gt;https://issues.apache.org/jira/browse/SSHD-754&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I did a trivial patch on for the server. I decided to limit write queue for channel messages
to block the sender even in the case send window is unlimited. I simply use a semaphore for it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;CHANNEL_STDOUT_LOCK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PressureLock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;CHANNEL_STDERR_LOCK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PressureLock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;writePacket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IoWriteFuture&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The workaround for&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// https://issues.apache.org/jira/browse/SSHD-754&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// the trick is to block writer thread once there are more&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// than 100 messages in either rekey wait queue or nio write queue&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;lock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;SshConstants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSH_MSG_CHANNEL_DATA&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHANNEL_STDOUT_LOCK&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;SshConstants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSH_MSG_CHANNEL_EXTENDED_DATA&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHANNEL_STDERR_LOCK&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writePacket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code above is included in my inheritor of the &lt;code&gt;org.apache.sshd.common.session.AbstractSession&lt;/code&gt;.
I like Apache Mina SSHD library is designed in an extensible way making such workaround possible.&lt;/p&gt;

&lt;p&gt;And the &lt;code&gt;PressureLock&lt;/code&gt; was implemented this way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PressureLock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;semaphore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;listener&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SshFutureListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IoWriteFuture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operationComplete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IoWriteFuture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;semaphore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SshFutureListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IoWriteFuture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;semaphore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I checked the fix with my tests. The problem was solved.&lt;/p&gt;

&lt;h1 id=&quot;putty-changes&quot;&gt;Putty changes&lt;/h1&gt;

&lt;p&gt;With integration tests, I was able to detect that it started 
to fail only with Putty 0.68. Putty 0.67 was working great. 
Also, all our problems were only from putty SSH clients on Windows.&lt;/p&gt;

&lt;p&gt;I decided to dig dipper and see, that change was it. 
Sadly, there were so many changes between 0.67 and 0.68. 
Also, it took several years for them too.&lt;/p&gt;

&lt;p&gt;I knew I was looking the change to windows size. I confirmed in debugger,
Putty 0.67 was using 16K for it.&lt;/p&gt;

&lt;p&gt;And I found the change &lt;a href=&quot;https://git.tartarus.org/?p=simon/putty.git;a=commit;h=b22c0b6f3e6f5254270a89f86df3edfc4da829d2&quot;&gt;b22c0b6f3e6f5254270a89f86df3edfc4da829d2&lt;/a&gt;
and the &lt;a href=&quot;https://git.tartarus.org/?p=simon/putty.git;a=blobdiff;f=windows/winplink.c;h=99e269fdc106687e7edff5c51fb778ee22d545b7;hp=a0458b39a878b0ad8af99d9a7294e2129b3bf787;hb=b22c0b6f3e6f5254270a89f86df3edfc4da829d2;hpb=34add87ad249205d4ed36381bfb506a431dc0e7a&quot;&gt;winplink.c file&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span class=&quot;gd&quot;&gt;--- a/windows/winplink.c&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+++ b/windows/winplink.c&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;@@ -618,6 +618,17 @@ int main(int argc, char **argv)&lt;/span&gt;
        return 1;
     }
 
&lt;span class=&quot;gi&quot;&gt;+    /*&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+     * Plink doesn&amp;#39;t provide any way to add forwardings after the&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+     * connection is set up, so if there are none now, we can safely set&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+     * the &amp;quot;simple&amp;quot; flag.&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+     */&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+    if (conf_get_int(conf, CONF_protocol) == PROT_SSH &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+       !conf_get_int(conf, CONF_x11_forward) &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+       !conf_get_int(conf, CONF_agentfwd) &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+       !conf_get_str_nthstrkey(conf, CONF_portfwd, 0))&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+       conf_set_int(conf, CONF_ssh_simple, TRUE);&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The change was to flip &lt;code&gt;CONF_ssh_simple&lt;/code&gt; mode on Windows. The change 
did enable 2GB receive window, as you may see from the usages.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;ssh.c&lt;/code&gt; in &lt;a href=&quot;https://the.earth.li/~sgtatham/putty/latest/putty-0.70.tar.gz&quot;&gt;Putty 0.70&lt;/a&gt; we have defines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define OUR_V2_BIGWIN 0x7fffffff&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define OUR_V2_WINSIZE 16384&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And the code-block:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ssh_is_simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ssh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * We use the &amp;#39;simple&amp;#39; variant of the SSH protocol if we&amp;#39;re asked&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * to, except not if we&amp;#39;re also doing connection-sharing (either&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * tunnelling our packets over an upstream or expecting to be&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * tunnelled over ourselves), since then the assumption that we&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * have only one channel to worry about is not true after all.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf_get_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONF_ssh_simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bare_connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connshare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Set up most of a new ssh_channel.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ssh_channel_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh_channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Ssh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc_channel_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;closes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pending_eof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;throttling_conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locwindow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locmaxwin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remlocwin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;ssh_is_simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;OUR_V2_BIGWIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUR_V2_WINSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chanreq_head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;throttle_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNTHROTTLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bufchain_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outbuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The windows size is computed by the following expression:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;	&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locwindow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locmaxwin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remlocwin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;ssh_is_simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;OUR_V2_BIGWIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUR_V2_WINSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The windows sizes are exactly the same as I saw in debugger both for
&lt;code&gt;0.67&lt;/code&gt; and &lt;code&gt;0.69&lt;/code&gt; versions.&lt;/p&gt;

&lt;p&gt;That was it. And it was in April 2016. It took more than a year 
for the change to cause the issues I was debugging.&lt;/p&gt;

&lt;p&gt;Thanks to the opensource, I was able to dig that deep to see the source
of the problem. I liked it.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I was running these SSH servers for more than a year. I like people 
say, ‘Hey, I did no changes to anything, why is it failing now?’&lt;/p&gt;

&lt;p&gt;It was indeed the change. And the system started to fail. It was
the outer world that changed.&lt;/p&gt;

&lt;p&gt;I found the source of the issue and did a patch to make the server
work again with new SSH clients. That was fun!&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="git" />
  
    <category term="ssh" />
  
    <category term="java" />
  
    <category term="oom" />
  
    <category term="putty" />
  
    <category term="opensource" />
  
    <category term="debug" />
  
    <category term="service" />
  
    <summary type="html">An accident and investigation of the server failure</summary>
  
  </entry>
  
  <entry>
    <title type="html">A Bash Test Runner for TeamCity</title>
    <link href="http://jonnyzzz.com/blog/2017/08/09/test-runner/" rel="alternate" type="text/html" title="A Bash Test Runner for TeamCity" />
    <published>2017-08-09T00:00:00+00:00</published>
    <updated>2017-08-09T00:00:00+00:00</updated>
    <id>/blog/2017/08/09/test-runner</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/08/09/test-runner/">&lt;p&gt;An ad-hoc bash test runner with TeamCity support&lt;/p&gt;

&lt;p&gt;That time I was playing with a tiny &lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt; project. I was doing a console tool 
to update &lt;a href=&quot;https://www.consul.io/&quot;&gt;Consul KV&lt;/a&gt; in the required way, with transaction and domain specifics.&lt;/p&gt;

&lt;p&gt;Why the tool? Well, I was needed to update several keys from our &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; deployment
scripts. And &lt;a href=&quot;https://www.consul.io/api/txn.html&quot;&gt;transactions&lt;/a&gt; were the nice way
to run an atomic update. Secondly, it is better to offload tricky domain specific code to a dedicated 
place, which has better tests and build process. The alternative in my case was to 
use &lt;code&gt;curl&lt;/code&gt; or similar to run Consul KV transactions with no easy way to test it easily.&lt;/p&gt;

&lt;p&gt;By the time I realized it is better to call the tool from a command line to test it
does correct changed to the KV. So I was looking for a test runner.&lt;/p&gt;

&lt;p&gt;After some research, I decided to use 
&lt;a href=&quot;https://confluence.jetbrains.com/display/TCD10/Build+Script+Interaction+with+TeamCity&quot;&gt;TeamCity Service Messages&lt;/a&gt;
to report test progress back to the CI.&lt;/p&gt;

&lt;p&gt;The idea of tests is as follows. Each test is created as an &lt;code&gt;.sh&lt;/code&gt; file under &lt;code&gt;tests&lt;/code&gt; folder. Exit code is used to tell 
a failure from success. That is necessary to be able to run every test and only one test locally while developing.&lt;/p&gt;

&lt;p&gt;Finally, I created the following test runner:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e -x -u
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$( cd &amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; dirname &lt;span class=&quot;s2&quot;&gt;&amp;quot;${BASH_SOURCE[0]}&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Running integration tests...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;TC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##teamcity&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; ${TC}[testSuiteStarted name=&amp;#39;integration-tests&amp;#39;] &amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; TEST in tests/* &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;TEST_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;basename &lt;span class=&quot;nv&quot;&gt;$TEST&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; ${TC}[testStarted name=&amp;#39;$TEST_NAME&amp;#39; captureStandardOutput=&amp;#39;true&amp;#39;] &amp;quot;&lt;/span&gt;
  ./&lt;span class=&quot;nv&quot;&gt;$TEST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; ${TC}[testFailed name=&amp;#39;$TEST_NAME&amp;#39;] &amp;quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; ${TC}[testFinished name=&amp;#39;$TEST_NAME&amp;#39;] &amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; ${TC}[testSuiteFinished name=&amp;#39;integration-tests&amp;#39;] &amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;By the time, I’m still uncertain, if I need to use this one. Or, maybe I should switch to &lt;code&gt;go test&lt;/code&gt; in the future. 
The best feature of the test above is it supported by &lt;a href=&quot;https://jetbrains.com/teamcity&quot;&gt;TeamCity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yoy may find the actual version of it on GitHub. 
&lt;a href=&quot;https://github.com/jonnyzzz/teamcity-test-script&quot;&gt;https://github.com/jonnyzzz/teamcity-test-script&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;UPD. I have re-evaluated approaches and decided to implement integration tests with 
&lt;a href=&quot;https://golang.org/pkg/testing/&quot;&gt;go test&lt;/a&gt; instead. The main problem was that I need to pass many 
parameters to my tool to start it in a test. Hard-coding those parameters for every test was not worth it. 
In Go it was easier to create an assertions API to check Consul KV state too. The API helps to setup 
necessary KV state too. The whole approach makes it simpler to write tests.&lt;/p&gt;

&lt;p&gt;I’m able to run all of my tests from &lt;a href=&quot;https://www.jetbrains.com/go/&quot;&gt;Gogland&lt;/a&gt;. 
The test assumes Consul is running by checking a particular file under the &lt;code&gt;GOPATH&lt;/code&gt;. 
There is a setup bash script that downloads and starts Consul dev server both for development and continuous integration. 
I extended the &lt;a href=&quot;/blog/2017/07/05/go-build/&quot;&gt;bash script&lt;/a&gt; for that.&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="teamcity" />
  
    <category term="test" />
  
    <category term="testrunner" />
  
    <category term="shell" />
  
    <category term="bash" />
  
    <category term="ci" />
  
    <category term="go" />
  
    <category term="build" />
  
    <summary type="html">An ad-hoc bash test runner with TeamCity support</summary>
  
  </entry>
  
  <entry>
    <title type="html">Building Go Project</title>
    <link href="http://jonnyzzz.com/blog/2017/07/05/go-build/" rel="alternate" type="text/html" title="Building Go Project" />
    <published>2017-07-05T00:00:00+00:00</published>
    <updated>2017-07-05T00:00:00+00:00</updated>
    <id>/blog/2017/07/05/go-build</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/07/05/go-build/">&lt;p&gt;No Silver-Go-Bullet. Yet another ad-hoc build.&lt;/p&gt;

&lt;p&gt;I was doing a small Go command line tool project. All the time I was starting Go codebase, I looking for 
the proper way to setup project and to build it.&lt;/p&gt;

&lt;p&gt;The right build to me is the build which is reproducible. Such build is likely to be isolated 
from a machine where you run it. Be it Linux, Mac or Windows. 
Also, the right build should have all dependencies fixed. Otherwise, we have merely no chances
to recreated it in the future.&lt;/p&gt;

&lt;p&gt;As the very first example, I decided to use the approach from &lt;a href=&quot;https://github.com/hashicorp/consul-template&quot;&gt;Consul Template&lt;/a&gt;.
That time (May 2017) it was a &lt;code&gt;make&lt;/code&gt; based build which was using the official Docker container to run.
It was great! I was able to kick-start the project and to focus on development. But, it was crazy slow. 
It took seconds to compile a tiny project. It was also unable to run on Windows.&lt;/p&gt;

&lt;p&gt;I did research. Found several approaches to building Go with Gradle. I decided to try 
&lt;a href=&quot;https://github.com/gogradle/gogradle&quot;&gt;Gogradle&lt;/a&gt;. Also, there is &lt;a href=&quot;https://github.com/echocat/gradle-golang-plugin&quot;&gt;gradle-golang-plugin&lt;/a&gt;.
Overall, the story did not play well because some issues I came across. And again, the solution was heavy!&lt;/p&gt;

&lt;p&gt;Isolation. Docker. Cool stuff. But, the best stuff, it to think Docker, and event avoid it. The Go itself 
is amazing in that sense. The go binaries have zero dependencies. And this means we are able to zero-copy
dependencies.&lt;/p&gt;

&lt;p&gt;Finally, I created the following script. A still waiting for something better, and easier to use.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$( cd &amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; dirname &lt;span class=&quot;s2&quot;&gt;&amp;quot;${BASH_SOURCE[0]}&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e -x -u

&lt;span class=&quot;nv&quot;&gt;GOVERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.8.1

&lt;span class=&quot;nv&quot;&gt;LOCAL_DIST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$(pwd)/dist&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LOCAL_GO_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$LOCAL_DIST/go-$(uname)-$GOVERSION&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ! -f &lt;span class=&quot;nv&quot;&gt;$LOCAL_GO_HOME&lt;/span&gt;/bin/go &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;GO_PKG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOCAL_DIST&lt;/span&gt;/go-pkg-&lt;span class=&quot;nv&quot;&gt;$GOVERSION&lt;/span&gt;/go-binary.tar.gz
  &lt;span class=&quot;nv&quot;&gt;GO_UNPACK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOCAL_DIST&lt;/span&gt;/go-pkg-&lt;span class=&quot;nv&quot;&gt;$GOVERSION&lt;/span&gt;/unpack

  rm -rf   &lt;span class=&quot;nv&quot;&gt;$GO_UNPACK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;mkdir -p &lt;span class=&quot;nv&quot;&gt;$GO_UNPACK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$( uname )&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~ .*&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Dd&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;arwin.* &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    curl -o &lt;span class=&quot;nv&quot;&gt;$GO_PKG&lt;/span&gt; https://storage.googleapis.com/golang/go&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOVERSION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.darwin-amd64.tar.gz
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    curl -o &lt;span class=&quot;nv&quot;&gt;$GO_PKG&lt;/span&gt; https://storage.googleapis.com/golang/go&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOVERSION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.linux-amd64.tar.gz
  &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

  tar -xf &lt;span class=&quot;nv&quot;&gt;$GO_PKG&lt;/span&gt; -C &lt;span class=&quot;nv&quot;&gt;$GO_UNPACK&lt;/span&gt;

  rm -rf &lt;span class=&quot;nv&quot;&gt;$LOCAL_GO_HOME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;mkdir -p &lt;span class=&quot;nv&quot;&gt;$LOCAL_GO_HOME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;mv &lt;span class=&quot;nv&quot;&gt;$GO_UNPACK&lt;/span&gt;/go/** &lt;span class=&quot;nv&quot;&gt;$LOCAL_GO_HOME&lt;/span&gt;/

  rm -f &lt;span class=&quot;nv&quot;&gt;$GO_PKG&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$LOCAL_GO_HOME/bin:$PATH&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GOROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOCAL_GO_HOME&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GOPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;PATH
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;GOROOT
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;GOPATH
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CGO_ENABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(which go)&amp;quot;&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$LOCAL_GO_HOME/bin/go&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Incorrect go binary is still used: $(which go)&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; ! &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(go version)&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~ &lt;span class=&quot;s2&quot;&gt;&amp;quot;go${GOVERSION} &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Failed to install required Go version. &amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The script downloads Go binaries for Mac or Linux to a build folder. It does not update the folder if
there is Go already.&lt;/p&gt;

&lt;p&gt;You may find the actual version on GitHub. &lt;a href=&quot;https://github.com/jonnyzzz/go-build-script&quot;&gt;https://github.com/jonnyzzz/go-build-script&lt;/a&gt;
And let me know if you know the better way to Go.&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="shell" />
  
    <category term="bash" />
  
    <category term="ci" />
  
    <category term="go" />
  
    <category term="build" />
  
    <summary type="html">No Silver-Go-Bullet. Yet another ad-hoc build.</summary>
  
  </entry>
  
  <entry>
    <title type="html">A Kotlin Coroutine for an OutputStream Filtering</title>
    <link href="http://jonnyzzz.com/blog/2017/06/21/coroutine-to-process-data/" rel="alternate" type="text/html" title="A Kotlin Coroutine for an OutputStream Filtering" />
    <published>2017-06-21T00:00:00+00:00</published>
    <updated>2017-06-21T00:00:00+00:00</updated>
    <id>/blog/2017/06/21/coroutine-to-process-data</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/06/21/coroutine-to-process-data/">&lt;p&gt;Kotlin coroutines for OutputStream.&lt;/p&gt;

&lt;p&gt;In this post, we consider a low-level implementation for specific 
coroutines that are used to process streams in a server-side Java application. 
There is an existing code that writes the output to a given &lt;code&gt;OutputStream&lt;/code&gt; object. 
One may write it in Java as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExistingService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;callExistingCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need to intercept the output that is bing written by the &lt;code&gt;#callExistingCode&lt;/code&gt; function.&lt;/p&gt;

&lt;h1 id=&quot;example&quot;&gt;Example&lt;/h1&gt;
&lt;p&gt;Say the &lt;code&gt;ExistingService&lt;/code&gt; replies with an HTML, and the goal is to extract some part of it, say a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;
with a given &lt;code&gt;id&lt;/code&gt;.
Or an &lt;code&gt;ExistingService&lt;/code&gt; may be returning a ZIP archive, and the goal can be to add a file in it.&lt;/p&gt;

&lt;p&gt;There are many similar cases, where an &lt;code&gt;OutputStream&lt;/code&gt; post processing can be necessary.&lt;/p&gt;

&lt;h1 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;/h1&gt;
&lt;p&gt;Suppose the &lt;code&gt;ExistingService&lt;/code&gt; writes output in the following format:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(&amp;lt;SIZE&amp;gt;&amp;lt;CHANNEL-ID&amp;gt;&amp;lt;DATA&amp;gt;)*&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Where &lt;code&gt;&amp;lt;SIZE&amp;gt;&lt;/code&gt; is 4 bytes length message. &lt;code&gt;&amp;lt;CHANNEL-ID&amp;gt;&lt;/code&gt; is a one-byte message. &lt;code&gt;&amp;lt;DATA&amp;gt;&lt;/code&gt; is a 
byte sequence of given size.&lt;/p&gt;

&lt;p&gt;The such or similar format is widely used to send several streams within one connection. For example,
it is used in &lt;a href=&quot;https://www.ietf.org/rfc/rfc4251.txt&quot;&gt;SSH-2&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP/2&lt;/a&gt;
or &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/technical/pack-protocol.txt&quot;&gt;Git&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Out goal is to include additional messages to the stream on the fly, while it is being generated 
by the call to an &lt;code&gt;ExistingService&lt;/code&gt;.
We just need to implement the method:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;weaveStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;a-trivial-java-implementation&quot;&gt;A Trivial Java Implementation&lt;/h1&gt;

&lt;p&gt;In Java we have &lt;code&gt;PipedOutputStream&lt;/code&gt;/&lt;code&gt;PipedInputStream&lt;/code&gt; classes that may turn an OutputStream 
into an &lt;code&gt;InputStream&lt;/code&gt;. Next, the processing can be done easily.&lt;/p&gt;

&lt;p&gt;We have a thread, that reads data from an &lt;code&gt;InputStream&lt;/code&gt;, e.g.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;weaveStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;PipedOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PipeOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;PipedInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PipedInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;runInThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weaveStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;weaveStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//omitted error processing here&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extractSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isLastBlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extractChannelId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;writeHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;copyBlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The cost here is high. We need an additional thread to implement that. Additionally, 
the whole data is copied to a buffer from which a &lt;code&gt;PipedInputStream&lt;/code&gt; is reading. 
Finally, piped streams implementation uses a level of synchronization to wait for 
next data portion to arrive. That can be problematic for some loads.&lt;/p&gt;

&lt;h1 id=&quot;a-smart-java-implementation&quot;&gt;A Smart Java Implementation&lt;/h1&gt;

&lt;p&gt;One can do a smarter implementation. Directly implement the &lt;code&gt;OutputStream&lt;/code&gt; and do the processing
and patching the output in there.&lt;/p&gt;

&lt;p&gt;What we do here is to add a state to our &lt;code&gt;OutputStream&lt;/code&gt; implementation. Each call to &lt;code&gt;write&lt;/code&gt; method
yields an update of the state.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;State Machine&lt;/em&gt;. That is what the code from here is about. It is up to programmer if to have a state
explicitly or not. Think about maintainability of such code first.&lt;/p&gt;

&lt;p&gt;The implementation here can be quite complex. As an example, I show a byte-by-byte 
processing. In real cases, it can be way more efficient to implement 
&lt;code&gt;write(byte[], int, int)&lt;/code&gt; method.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;weaveStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isReadingSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;readMoreSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isReadingChannelId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;readMoreChannelId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isProcessingData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;processModeData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Unexpected state&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The benefit here is that we no longer need an extra thread to pipe the output as input. Sill, code 
is getting more complex.&lt;/p&gt;

&lt;h1 id=&quot;a-coroutine-state-machine&quot;&gt;A Coroutine State Machine&lt;/h1&gt;

&lt;p&gt;In Kotlin 1.1 we have &lt;a href=&quot;http://kotlinlang.org/docs/reference/coroutines.html&quot;&gt;coroutines&lt;/a&gt;. The alternative way 
to implement a state machine with the help of compiler, with way more readable, linear-looking code.&lt;/p&gt;

&lt;p&gt;First, we need to declare an interface with &lt;code&gt;suspend&lt;/code&gt; functions, e.g.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataReader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Also, we need an implementation of the &lt;code&gt;OutputStream&lt;/code&gt; that allows us to use the &lt;code&gt;DataReader&lt;/code&gt;. That is 
the function &lt;code&gt;inverseRead&lt;/code&gt;. We’ll turn back to the implementation a bit later.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inverseRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;reader:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, we are able to implement the data processing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;weaveStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;target:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inverseRead&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;readStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;source:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;target:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extractSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isLastBlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extractChannelId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;writeHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check the code above. It is quite similar to what we had in &lt;em&gt;A Trivial Java Implementation&lt;/em&gt;. The difference
is huge. Every call to &lt;code&gt;suspend&lt;/code&gt; function pauses the execution of a method, so the execution turns to
the &lt;code&gt;write&lt;/code&gt; method implementation of &lt;code&gt;OutputStream&lt;/code&gt; in &lt;code&gt;inverseRead&lt;/code&gt;. We are able now to write
a linear looking code, that is executed in a piece-by-piece manner.&lt;/p&gt;

&lt;h1 id=&quot;implementation-of-the-coroutine&quot;&gt;Implementation of the Coroutine&lt;/h1&gt;

&lt;p&gt;The only missing part is the &lt;code&gt;inverseRead&lt;/code&gt;. We follow the &lt;a href=&quot;http://kotlinlang.org/docs/reference/coroutines.html&quot;&gt;coroutines documentation&lt;/a&gt;
to implement that. Great is there are many examples too.&lt;/p&gt;

&lt;p&gt;We implement &lt;code&gt;DataReader#read&lt;/code&gt; and &lt;code&gt;DataReader#pipe&lt;/code&gt; functions to suspend execution until there is enough data
send to &lt;code&gt;OutputStream#write&lt;/code&gt; method. We have the following state object for that:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataReaderState&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;readByteContinuation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Continuation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;?&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;pipeContinuation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Continuation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;pipeTarget&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;pipeSizeToWrite&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, we are able to implement the &lt;code&gt;DataReader&lt;/code&gt; interface in the following way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataReaderImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReaderState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReader&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suspendCoroutine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeContinuation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeSizeToWrite&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeTarget&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suspendCoroutine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readByteContinuation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All we have here is a call to the specific &lt;code&gt;suspendCoroutine&lt;/code&gt; function in Kotlin, which does the suspend. I decided
to omit for simplicity a defensive asserts that one may have in both &lt;code&gt;pipe&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; function implementation.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;OutputStream&lt;/code&gt; implementation in the example is executing next suspended function in a loop. The current
implementation does not check the state at the end of data too. The straightforward implementation is as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataReaderOutputStreamImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReaderState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byteArrayOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toByte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tailrec&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ByteArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;readOneByte&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readByteContinuation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readOneByte&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;readOneByte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;pipe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeContinuation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;toPipe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeSizeToWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeTarget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Illegal state&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At that moment we are ready to implement the &lt;code&gt;inverseRead&lt;/code&gt; function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inverseRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReaderState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;outputStream&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReaderOutputStreamImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;dataReader&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReaderImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;continuation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataReaderContinuation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createCoroutine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;continuation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputStream&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;coroutine-vs-state-machine&quot;&gt;Coroutine vs State Machine&lt;/h1&gt;

&lt;p&gt;It turned out we still needed to implement a state machine (via &lt;code&gt;DataReaderState&lt;/code&gt; class). It 
was necessary to add a state for each &lt;code&gt;suspend&lt;/code&gt; function of &lt;code&gt;DataReader&lt;/code&gt; interface. That was 
the code we need to write as building block (and there 
are &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;amazing libraries&lt;/a&gt; for most 
of the cases)&lt;/p&gt;

&lt;p&gt;The good part is that the rest part of the code, where we do the actual data decoding (the &lt;code&gt;readStream&lt;/code&gt; function)
now free from an explicit state machine style programming. One can have code written as easy
as possible. It’s easier to understand and to check. And, for example, we may use loops, try-catches 
and any other code constructs we like using for ordinary programs.&lt;/p&gt;

&lt;p&gt;In other words, with the help of Kotlin suspend functions we may minimize the number of complex functions and
concentrate on the actual development.&lt;/p&gt;

&lt;p&gt;For more information on coroutines power in Kotlin, you may refer to 
&lt;a href=&quot;https://vimeo.com/221264980/b3ac7f9001&quot;&gt;GeekOut Talk by Roman Elizarov&lt;/a&gt;
or to &lt;a href=&quot;http://kotlinlang.org/docs/reference/coroutines.html&quot;&gt;the documentation&lt;/a&gt;&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="kotlin" />
  
    <category term="coroutine" />
  
    <summary type="html">Kotlin coroutines for OutputStream.</summary>
  
  </entry>
  
  <entry>
    <title type="html">A post per 2 weeks</title>
    <link href="http://jonnyzzz.com/blog/2017/06/07/a-post-every-two-weeks/" rel="alternate" type="text/html" title="A post per 2 weeks" />
    <published>2017-06-07T00:00:00+00:00</published>
    <updated>2017-06-07T00:00:00+00:00</updated>
    <id>/blog/2017/06/07/a-post-every-two-weeks</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/06/07/a-post-every-two-weeks/">&lt;p&gt;a process to blog regularly&lt;/p&gt;

&lt;p&gt;From February 2017 I decided to update this blog regularly. It randomly 
turned out I update it once in 2 weeks.&lt;/p&gt;

&lt;p&gt;By the time of this post, I have eight updates published on a regular basis.&lt;/p&gt;

&lt;h1 id=&quot;pipeline&quot;&gt;Pipeline&lt;/h1&gt;

&lt;p&gt;To make sure I meet the pace, I decided to queue all posts. It may turn out I have
a post that is left in a queue for weeks or months. Nevertheless, this reasonable, to make
sure I will not have gaps in the schedule.&lt;/p&gt;

&lt;p&gt;The actual post lifetime is the following&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;authoring the main content (several attempts)&lt;/li&gt;
  &lt;li&gt;proofreading (several attempts)&lt;/li&gt;
  &lt;li&gt;spellchecking &amp;amp; publishing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In average it takes 3-4 evenings for a post to be ready to go. I like to leave a post
in a draft for some time. Fresh re-read always helps to improve.&lt;/p&gt;

&lt;p&gt;I use Git repository and Markdown to store all my posts. There is the older post with
more &lt;a href=&quot;/blog/2015/11/22/MoveMoveMove/&quot;&gt;info&lt;/a&gt; on the technical part of the process.&lt;/p&gt;

&lt;h1 id=&quot;channels&quot;&gt;Channels&lt;/h1&gt;

&lt;p&gt;This blog generates RSS feed with all contents. I have no idea, how many 
readers I have out of RSS.&lt;/p&gt;

&lt;p&gt;All posts are also announced on Twitter / Facebook / VK. It looks like the
best time for announcing is an evening in CET timezone, and morning in PDT.
Posting in the CET morning does not play well on Twitter.&lt;/p&gt;

&lt;p&gt;I update Facebook and VK. It mostly looks like there is no sense doing that, 
maybe I should measure that somehow.&lt;/p&gt;

&lt;h1 id=&quot;feedburner&quot;&gt;Feedburner&lt;/h1&gt;

&lt;p&gt;I’m not using FeedBurner. Well, I decided to set it up. Hope it’ll shed light
to the posts I write here.&lt;/p&gt;

&lt;p&gt;I installed the FeedBurner feed on April, 15-th 2017. All RSS Feed readers of the older feed
were kindly asked to switch to another RSS Feed URL. It was not possible to implement
good tracking without altering the URL for this static blog.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jonnyzzz.com/images/posts/2017-06-07-feedburner.png&quot; alt=&quot;Feedburner&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;analytics&quot;&gt;Analytics&lt;/h1&gt;

&lt;p&gt;The site has Google Analytics. Let me show what I have out of the analytics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jonnyzzz.com/images/posts/2017-06-07-analytics3.png&quot; alt=&quot;Google Analytics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That is +37% in sessions, and +58% in users.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;My goal is to share ideas, discoveries, and problems I solve. Now it is
time for the feedback from you, my readers. If you read my stories, please, don’t
hesitate to share what you think in comments.&lt;/p&gt;

&lt;p&gt;You may also follow me on &lt;a href=&quot;https://twitter.com/jonnyzzz&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be happy to have feedback from you, my readers&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="blog" />
  
    <summary type="html">a process to blog regularly</summary>
  
  </entry>
  
  <entry>
    <title type="html">Load Balancing SSH</title>
    <link href="http://jonnyzzz.com/blog/2017/05/24/ssh-haproxy/" rel="alternate" type="text/html" title="Load Balancing SSH" />
    <published>2017-05-24T00:00:00+00:00</published>
    <updated>2017-05-24T00:00:00+00:00</updated>
    <id>/blog/2017/05/24/ssh-haproxy</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/05/24/ssh-haproxy/">&lt;p&gt;More SSH servers behind the same hostname&lt;/p&gt;

&lt;p&gt;Say you have an SSH server on your premises. And say you have a huge load on that service.&lt;/p&gt;

&lt;p&gt;Example? Sure. Git repository. Any git ‘server’ is such a use-case.&lt;/p&gt;

&lt;h1 id=&quot;ssh-backgrounds&quot;&gt;SSH backgrounds&lt;/h1&gt;

&lt;p&gt;SSH acronym means &lt;code&gt;The Secure Shell&lt;/code&gt;. More precisely, we’ll be talking about SSH2 protocol, which is
a de-facto standard. This protocol is covered by the &lt;a href=&quot;https://tools.ietf.org/html/rfc4253&quot;&gt;RFC 4253&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Barely (as simply as possible), the connection is done as follows. A client opens new TCP connection 
to the server. It checks server public key(s) (using the &lt;code&gt;known_hosts&lt;/code&gt; file). Then server 
and client do key exchange, authentication and open channels to run commands or 
interactive sessions.&lt;/p&gt;

&lt;p&gt;More precisely, SSH protocol runs on top of TCP connection. This protocol is secure. We need 
to load balance TCP connections, aka &lt;a href=&quot;https://en.wikipedia.org/wiki/OSI_model&quot;&gt;L4&lt;/a&gt; level 
load balancing.&lt;/p&gt;

&lt;h1 id=&quot;dns-load-balancing&quot;&gt;DNS Load Balancing&lt;/h1&gt;

&lt;p&gt;We need to have several SSH server running. All IP addresses are registered in the DNS for the 
same hostname. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Round-robin_DNS&quot;&gt;DNS round-robin&lt;/a&gt; will make
it play as load balancing.&lt;/p&gt;

&lt;p&gt;The problem here is in the DNS update latency. DNS is cached all over the place. And we 
are not able to have more (or less) servers fast. In practice, it may take days to propagate
the update.&lt;/p&gt;

&lt;p&gt;Also, this approach requires as much IP addresses as we have SSH servers.&lt;/p&gt;

&lt;h1 id=&quot;haproxy-approach&quot;&gt;HAProxy Approach&lt;/h1&gt;

&lt;p&gt;There are many balances, we consider &lt;a href=&quot;http://www.haproxy.org/&quot;&gt;HAProxy&lt;/a&gt; 
for &lt;a href=&quot;https://www.quora.com/What-is-the-difference-between-layer-3-and-layer-4-load-balancing-Why-is-layer-7-LB-used-inspite-of-its-drawbacks-of-being-a-bottleneck&quot;&gt;L4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The configuration is quite simple.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;listen ssh 0.0.0.0:{{ app.ports.ssh.active }}
    mode tcp

    server &amp;lt;SERVER_NAME_1&amp;gt; &amp;lt;SERVER_HOST_1&amp;gt;:&amp;lt;SERVER_PORT_1&amp;gt; weight &amp;lt;WEIGHT_1&amp;gt;
    server &amp;lt;SERVER_NAME_2&amp;gt; &amp;lt;SERVER_HOST_2&amp;gt;:&amp;lt;SERVER_PORT_2&amp;gt; weight &amp;lt;WEIGHT_2&amp;gt;
    ...
    server &amp;lt;SERVER_NAME_N&amp;gt; &amp;lt;SERVER_HOST_N&amp;gt;:&amp;lt;SERVER_PORT_N&amp;gt; weight &amp;lt;WEIGHT_N&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This configuration is enough to make HAProxy run in the L4 mode to route traffic from the main service IP(s)
to all backends.&lt;/p&gt;

&lt;p&gt;Running several HAProxy instances behind different IP addresses is possible for redundancy and throughput.&lt;/p&gt;

&lt;h1 id=&quot;ssh-server-server-keys&quot;&gt;SSH Server Server Keys&lt;/h1&gt;

&lt;p&gt;It is necessary to have same server keys on all &lt;code&gt;SERVERN_1&lt;/code&gt; … &lt;code&gt;SERVER_N&lt;/code&gt; family, otherwise an SSH client 
will warn a possible MIIM attach, as client likely to access any SSH server from the same IP. And the &lt;code&gt;known_hosts&lt;/code&gt;
file stores server public key info for each known IP.&lt;/p&gt;

&lt;h1 id=&quot;tcp-balancing-issues-request-ip&quot;&gt;TCP Balancing Issues: Request IP&lt;/h1&gt;

&lt;p&gt;There are several differences between an HTTP-level (L7) balancing and TCP-level balancing. You are not able
to send request IP address that easy as via HTTP. The protocol is only about streams. There is no notion of headers,
where one is able to pass extra data, e.g. as in HTTP with &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There is no solution in general, but one can use &lt;a href=&quot;http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt&quot;&gt;HAProxy PROXY protocol&lt;/a&gt;.
That is an extension to any TCP protocol that blindly sends a specific string with request/response information to the 
server. One has to have a server, supporting PROXY protocol on the other end.&lt;/p&gt;

&lt;p&gt;The PROXY protocol is used in a number of places and services, e.g. AWS ELB, HAProxy, Nginx, and much mode.&lt;/p&gt;

&lt;p&gt;Bad news. Open SSH server implementation does not support it out of the box, but one may apply patches to support that.
I created and shared patches for &lt;a href=&quot;https://issues.apache.org/jira/browse/SSHD-656&quot;&gt;Apache Mina SSHD&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;To enable the support, add &lt;code&gt;send-proxy&lt;/code&gt; each server line. You may replace the line&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;     server &amp;lt;SERVER_NAME_N&amp;gt; &amp;lt;SERVER_HOST_N&amp;gt;:&amp;lt;SERVER_PORT_N&amp;gt; check weight &amp;lt;WEIGHT_N&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;     server &amp;lt;SERVER_NAME_N&amp;gt; &amp;lt;SERVER_HOST_N&amp;gt;:&amp;lt;SERVER_PORT_N&amp;gt; send-proxy weight &amp;lt;WEIGHT_N&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;health-checks&quot;&gt;Health Checks&lt;/h1&gt;

&lt;p&gt;HAProxy supports automated health checks on TCP level. Ones a backend server is not able to reply on checks, 
the traffic is no longer send to an unhealthy host.&lt;/p&gt;

&lt;p&gt;I use the following configuration for that &lt;code&gt;tcp-check expect string SSH-2.0-&lt;/code&gt;. The option instructs HAProxy
to run checks and to check if the remote end replies with a string that starts with &lt;code&gt;SSH-2.0-&lt;/code&gt;. Such answer is 
the standard message required by the SSH2 protocol.&lt;/p&gt;

&lt;p&gt;Overall we have the following configuration:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;listen ssh 0.0.0.0:{{ app.ports.ssh.active }}
    mode tcp
    
    tcp-check expect string SSH-2.0-

    ...
    server &amp;lt;SERVER_NAME_i&amp;gt; &amp;lt;SERVER_HOST_i&amp;gt;:&amp;lt;SERVER_PORT_i&amp;gt; check weight &amp;lt;WEIGHT_1&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;usages&quot;&gt;Usages&lt;/h1&gt;

&lt;p&gt;We use this approach mainly to implement
&lt;a href=&quot;https://martinfowler.com/bliki/BlueGreenDeployment.html&quot;&gt;Green-Blue deployments&lt;/a&gt;. We route traffic 
to the active host. We can change the configuration dynamically or even have custom weights to implement A/B tests.&lt;/p&gt;

&lt;p&gt;An alternative is to use DNS. But with DNS you never know how much time will it take for client’s and chain
of DNS servers to propagate the change. In the real world, it looks the best to combine DNS as more slow
and static entry level balancing. Next to use HAProxy (or similar) balancing to implement fast configuration
changes on the fly.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I showed how to easily load-balance SSH servers for fun and profit. Hope this helps you to 
build a highly available system.&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="ssh" />
  
    <category term="haproxy" />
  
    <category term="tcp" />
  
    <category term="service" />
  
    <category term="cloud" />
  
    <category term="glb" />
  
    <category term="load-balance" />
  
    <summary type="html">More SSH servers behind the same hostname</summary>
  
  </entry>
  
  <entry>
    <title type="html">Words Cloud from Metrics Data</title>
    <link href="http://jonnyzzz.com/blog/2017/05/10/tags-cloud-from-analytics/" rel="alternate" type="text/html" title="Words Cloud from Metrics Data" />
    <published>2017-05-10T00:00:00+00:00</published>
    <updated>2017-05-10T00:00:00+00:00</updated>
    <id>/blog/2017/05/10/tags-cloud-from-analytics</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/05/10/tags-cloud-from-analytics/">&lt;p&gt;representing metrics as words cloud&lt;/p&gt;

&lt;p&gt;I was working on a presentation of an internal service I’m working. In the service we have many 
entities (sorry, no details here for now), each generates inbound and outbound traffic.&lt;/p&gt;

&lt;h1 id=&quot;preparing-data&quot;&gt;Preparing Data&lt;/h1&gt;

&lt;p&gt;The service has an endpoint with whole metrics we collect. That is an enormously huge JSON file, that one can fetch
from an HTTP endpoint.&lt;/p&gt;

&lt;p&gt;There is too much data event to feed some &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt; solution. So we need to filter/normalize the data first.&lt;/p&gt;

&lt;p&gt;I use amazing &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;. Great tool to update/fetch/patch/present data. On macOS
you may simply say &lt;code&gt;brew install jq&lt;/code&gt; to have it.&lt;/p&gt;

&lt;p&gt;Fetching data in the console can be done simply too. I use &lt;a href=&quot;https://curl.haxx.se/&quot;&gt;curl&lt;/a&gt; for that.&lt;/p&gt;

&lt;p&gt;The finally, to prepare the data, I use to following snipped&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; 
curl -s http://gh-prod-blue-backend-01/~api/manage/metrics | \
  jq --raw-output \
  &amp;#39;[ .block[] |  { key: .id, value : .counters.&amp;quot;outbound-traffic&amp;quot;  } ] | del (.[] | select(.value == null ) ) | from_entries &amp;#39;  
   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output from the tool was like the following&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;entity-name-1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;entity-name-2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5533&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;entity-name-3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13750&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//....&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;entity-name-N&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7235017&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That is the data to feed into a words/tags cloud generator.&lt;/p&gt;

&lt;h1 id=&quot;generating-a-tags-cloud&quot;&gt;Generating a Tags Cloud&lt;/h1&gt;

&lt;p&gt;I failed to find any good online service to implement the task in several clicks. Finally, I found a fantastic Python library
called &lt;a href=&quot;https://github.com/amueller/word_cloud&quot;&gt;word_cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Frankly, I’m not a python expert. I found an example and managed to turn it 
to my need in &lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;PyCharm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That is the snipped I finally did&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;wordcloud&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WordCloud&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; { &amp;#39;json&amp;#39; : &amp;#39;data is here&amp;#39; } &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;theDataMax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;theDataMin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;##&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## normalize the data first&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theDataMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theDataMax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theDataMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Generate a word cloud image&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wordcloud&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WordCloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;background_color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ranks_only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prefer_horizontal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;color_func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_words&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_font_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;stopwords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;max_font_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font_step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;relative_scaling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collocations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;colormap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;normalize_plurals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate_from_frequencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Display the generated image:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordcloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interpolation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bilinear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I’m happy I came across several amazing tools, and it turned to be easy and fun to generate some analytics ‘reports’ like that:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jonnyzzz.com/images/posts/2017-05-10-tags-cloud-from-analytics.png&quot; alt=&quot;Marvell characters cloud&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I use Marvell character names instead of real names :)&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="metrics" />
  
    <category term="cloud" />
  
    <category term="ha" />
  
    <category term="logs" />
  
    <summary type="html">representing metrics as words cloud</summary>
  
  </entry>
  
  <entry>
    <title type="html">Bytecode behind coroutines in Kotlin</title>
    <link href="http://jonnyzzz.com/blog/2017/04/26/corotines-or-state-machine/" rel="alternate" type="text/html" title="Bytecode behind coroutines in Kotlin" />
    <published>2017-04-26T00:00:00+00:00</published>
    <updated>2017-04-26T00:00:00+00:00</updated>
    <id>/blog/2017/04/26/corotines-or-state-machine</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/04/26/corotines-or-state-machine/">&lt;p&gt;A simple suspend function, and its bytecode.&lt;/p&gt;

&lt;p&gt;The new thing in Kotlin 1.1 is &lt;a href=&quot;http://kotlinlang.org/docs/reference/coroutines.html&quot;&gt;coroutines&lt;/a&gt;. As we know
from the documentation, it is the &lt;code&gt;suspend&lt;/code&gt; keyword that was added to the language. The rest is implemented 
as libraries.&lt;/p&gt;

&lt;p&gt;Let’s take a look at the bytecode side of this feature.&lt;/p&gt;

&lt;h1 id=&quot;an-empty-suspend-function&quot;&gt;An Empty Suspend function&lt;/h1&gt;

&lt;p&gt;I have the following code snippet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s take a look to the bytecode from this method. For the experiment, I use Kotlin 1.1.1 with IntelliJ IDEA 2017.1.
Results may depend on version. I use &lt;code&gt;javap -c&lt;/code&gt; to generate those dumps&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  public static final java.lang.Object b(kotlin.coroutines.experimental.Continuation&amp;lt;? super kotlin.Unit&amp;gt;);
    Code:
       0: aload_0
       1: ldc           #13                 // String $continuation
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #25                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
       9: areturn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The interface &lt;code&gt;Continuation&lt;/code&gt; is declared in the Kotlin standard library, see &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/&quot;&gt;documentation&lt;/a&gt;.
It contains &lt;code&gt;context&lt;/code&gt; and methods to complete continuation: &lt;code&gt;resume&lt;/code&gt; and &lt;code&gt;resumeWithException&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;a-trivial-suspend-function&quot;&gt;A Trivial Suspend function&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here &lt;code&gt;a()&lt;/code&gt; and &lt;code&gt;c()&lt;/code&gt; are calls to ordinary Java methods, which were declared in Kotlin without the &lt;code&gt;suspend&lt;/code&gt; keyword.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; public static final java.lang.Object b2(kotlin.coroutines.experimental.Continuation&amp;lt;? super kotlin.Unit&amp;gt;);
    Code:
       0: aload_0
       1: ldc           #13                 // String $continuation
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: invokestatic  #29                 // Method a:()V
       9: invokestatic  #31                 // Method c:()V
      12: getstatic     #25                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      15: areturn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As we see from this code, there is nothing special done to the method. The only return value and additional parameter were added.&lt;/p&gt;

&lt;h1 id=&quot;a-suspend-function-with-a-suspend-call&quot;&gt;A suspend function with a suspend call&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;b3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example, we call &lt;code&gt;b3()&lt;/code&gt; suspend function from itself. Here &lt;code&gt;a()&lt;/code&gt; and &lt;code&gt;c()&lt;/code&gt; are calls to ordinary Java 
methods, which were declared in Kotlin without &lt;code&gt;suspend&lt;/code&gt; keyword. The generated code now looks way different.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  public static final java.lang.Object b3(kotlin.coroutines.experimental.Continuation&amp;lt;? super kotlin.Unit&amp;gt;);
    descriptor: (Lkotlin/coroutines/experimental/Continuation;)Ljava/lang/Object;
    Code:
       0: aload_0
       1: ldc           #13                 // String $continuation
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #34                 // class streams4/ZKt$b3$1
       9: dup
      10: aload_0
      11: invokespecial #38                 // Method streams4/ZKt$b3$1.&amp;quot;&amp;lt;init&amp;gt;&amp;quot;:(Lkotlin/coroutines/experimental/Continuation;)V
      14: getstatic     #25                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      17: aconst_null
      18: invokevirtual #42                 // Method streams4/ZKt$b3$1.doResume:(Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Object;
      21: areturn&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Instead of having the method in-place, it now generates an inner class for the state-machine to implement the &lt;code&gt;suspend&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The class &lt;code&gt;streams4/ZKt$b3$1&lt;/code&gt; is generated as follows&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;final class streams4.ZKt$b3$1 extends kotlin.coroutines.experimental.jvm.internal.CoroutineImpl {
  public final java.lang.Object doResume(java.lang.Object, java.lang.Throwable);
    descriptor: (Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Object;
    Code:
       0: invokestatic  #13                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
       3: astore_3
       4: aload_0
       5: getfield      #17                 // Field kotlin/coroutines/experimental/jvm/internal/CoroutineImpl.label:I
       8: tableswitch   { // 0 to 1
                     0: 32
                     1: 58
               default: 74
          }
      32: aload_2
      33: dup
      34: ifnull        38
      37: athrow
      38: pop
      39: invokestatic  #23                 // Method streams4/ZKt.a:()V
      42: aload_0
      43: aload_0
      44: iconst_1
      45: putfield      #17                 // Field kotlin/coroutines/experimental/jvm/internal/CoroutineImpl.label:I
      48: invokestatic  #27                 // Method streams4/ZKt.b3:(Lkotlin/coroutines/experimental/Continuation;)Ljava/lang/Object;
      51: dup
      52: aload_3
      53: if_acmpne     66
      56: aload_3
      57: areturn
      58: aload_2
      59: dup
      60: ifnull        64
      63: athrow
      64: pop
      65: aload_1
      66: pop
      67: invokestatic  #30                 // Method streams4/ZKt.c:()V
      70: getstatic     #36                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      73: areturn
      74: new           #38                 // class java/lang/IllegalStateException
      77: dup
      78: ldc           #40                 // String call to &amp;#39;resume&amp;#39; before &amp;#39;invoke&amp;#39; with coroutine
      80: invokespecial #44                 // Method java/lang/IllegalStateException.&amp;quot;&amp;lt;init&amp;gt;&amp;quot;:(Ljava/lang/String;)V
      83: athrow

  streams4.ZKt$b3$1(kotlin.coroutines.experimental.Continuation);
    descriptor: (Lkotlin/coroutines/experimental/Continuation;)V
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokespecial #58                 // Method kotlin/coroutines/experimental/jvm/internal/CoroutineImpl.&amp;quot;&amp;lt;init&amp;gt;&amp;quot;:(ILkotlin/coroutines/experimental/Continuation;)V
       6: return
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The implementation of &lt;code&gt;b3()&lt;/code&gt; function is moved to a state machine anonymous object. The main method of 
the inner object does a switch over states of the state machine.
The &lt;code&gt;b3()&lt;/code&gt; function is split by every &lt;code&gt;suspend&lt;/code&gt; function call. On the example below,
we have only 2 states. This is up to helper functions to assert the machine is always in a correct state.&lt;/p&gt;

&lt;p&gt;On every &lt;code&gt;suspend&lt;/code&gt; function call, Kotlin creates an object to encapsulate the state of the state machine, that 
is created to implement the continuations on top of JVM.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Coroutines in Kotlin are awesome, easy and powerful constructs that give 
us the power to fight the complexity (by the cost of an extra abstraction 
level). I’m looking forward to using coroutines to simplify asynchronous 
code in my apps.&lt;/p&gt;

&lt;p&gt;For more information and details see &lt;a href=&quot;http://kotlinlang.org/docs/reference/coroutines.html&quot;&gt;Kotlin coroutines&lt;/a&gt; documentation.&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="kotlin" />
  
    <category term="coroutine" />
  
    <category term="kotlin-bytecode" />
  
    <category term="jvm" />
  
    <category term="tip" />
  
    <summary type="html">A simple suspend function, and its bytecode.</summary>
  
  </entry>
  
  <entry>
    <title type="html">Hints in Stack Traces on the JVM</title>
    <link href="http://jonnyzzz.com/blog/2017/04/12/named-frames-v2/" rel="alternate" type="text/html" title="Hints in Stack Traces on the JVM" />
    <published>2017-04-12T00:00:00+00:00</published>
    <updated>2017-04-12T00:00:00+00:00</updated>
    <id>/blog/2017/04/12/named-frames-v2</id>
    <content type="html" xml:base="http://jonnyzzz.com/blog/2017/04/12/named-frames-v2/">&lt;p&gt;Encode context in a thread dump or an exception stack trace for the JVM.&lt;/p&gt;

&lt;p&gt;Remember a production application stack trace or thread dump? Were you able to understand 
what a thread was downing? Why was a thread idling/hanging/waiting? What was the context of it? 
What a command was it? Or, say you were digging the roots of a NullPointerException stack trace?&lt;/p&gt;

&lt;p&gt;Most time it’s hard.&lt;/p&gt;

&lt;p&gt;There is a simple remedy. One may call &lt;code&gt;Threads.setName&lt;/code&gt; to set/unset thread
name to indicate current activity and/or to add more information.&lt;/p&gt;

&lt;p&gt;Hey, be aware of the &lt;code&gt;Threads.setName&lt;/code&gt;. Some other code may also use it in their way.
Please, do not spoil it, if you can&lt;/p&gt;

&lt;p&gt;Unfortunately, exception stack trace does not container thread name. So the fragile context is
lost if an exception is thrown. The only hope it is logged correctly, and logger includes
a thread name. Surprise! The full thread name.&lt;/p&gt;

&lt;p&gt;What else? Why cannot we include the information locally and so that it is not 
lost in an exception or in a logger message? Can we make it more context-aware and readable?&lt;/p&gt;

&lt;h1 id=&quot;an-example&quot;&gt;An example&lt;/h1&gt;

&lt;p&gt;Consider an application, which runs a request for a given, say, &lt;code&gt;userId&lt;/code&gt;. And it crashes with code like&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Exception in thread &amp;quot;main&amp;quot; com.jonnyzzz.blog.example.wtf.RemoteCrashServiceTimeOutException
	at com.jonnyzzz.blog.example.wtf.RemoteCrashMicroServiceAccessImpl.itWillNotCrash(crash.kt:5)
	at com.jonnyzzz.blog.example.logic.business.BusinessLogic.mightyMethod(BusinessLogic.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:9)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.vendor.fun.AmazingDBSupport.runThisCodeFinally(AmazingDBSupport.kt:7)
	at com.jonnyzzz.blog.example.tansaction.meta.JokingTransaction.crzTr(JokingTransaction.kt:7)
	at com.jonnyzzz.blog.example.tansaction.Transaction.transaction(Transaction.kt:7)
	at com.jonnyzzz.blog.example.system.SystemInvariant.promoteB(SystemInvariant.kt:7)
	at com.jonnyzzz.blog.example.Ent.processA(Ent.kt:7)
	at com.jonnyzzz.blog.example.web.Controller.executeRequest(Controller.kt:10)
	at com.jonnyzzz.blog.example.EnterpriseAppKt.main(EnterpriseApp.kt:13)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What was the context of the failure above? Does it somehow related to parameters that were around?&lt;/p&gt;

&lt;h1 id=&quot;named-frames&quot;&gt;Named Frames&lt;/h1&gt;

&lt;p&gt;I created the &lt;a href=&quot;https://github.com/jonnyzzz/named-java-frames&quot;&gt;Named Frames&lt;/a&gt;
library, which aims to help by including an additional information as &lt;em&gt;method calls&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let’s now update the code and include &lt;code&gt;userId&lt;/code&gt; and RemoteCrashMicroService backend URL into the thread
dump. That is done be wrapping method calls with code like that:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;NamedStackFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;YOUR TEXT HERE&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// it is called from a method, which contains &amp;#39;YOUR TEXT HERE&amp;#39; in the full name&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The updated thread dump from the exception is now the following&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Exception in thread &amp;quot;main&amp;quot; com.jonnyzzz.blog.example.wtf.RemoteCrashServiceTimeOutException
	at com.jonnyzzz.blog.example.wtf.RemoteCrashMicroServiceAccessImpl$itWillNotCrash$1.call(crash.kt:8)
	at com.jonnyzzz.blog.example.wtf.RemoteCrashMicroServiceAccessImpl$itWillNotCrash$1.call(crash.kt:5)

	at __. service = backend-452 .__.call(JavaGeneratorTemplate.java:39)

	at com.jonnyzzz.blog.example.wtf.RemoteCrashMicroServiceAccessImpl.itWillNotCrash(crash.kt:7)
	at com.jonnyzzz.blog.example.logic.business.BusinessLogic.mightyMethod(BusinessLogic.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:9)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.transaction.internals.InternalsForSure.transaction(InternalsForSure.kt:7)
	at com.jonnyzzz.blog.example.db.vendor.fun.AmazingDBSupport.runThisCodeFinally(AmazingDBSupport.kt:7)
	at com.jonnyzzz.blog.example.tansaction.meta.JokingTransaction.crzTr(JokingTransaction.kt:7)
	at com.jonnyzzz.blog.example.tansaction.Transaction.transaction(Transaction.kt:7)
	at com.jonnyzzz.blog.example.system.SystemInvariant.promoteB(SystemInvariant.kt:7)
	at com.jonnyzzz.blog.example.Ent.processA(Ent.kt:7)
	at com.jonnyzzz.blog.example.web.Controller$executeRequest$1.call(Controller.kt:12)
	at com.jonnyzzz.blog.example.web.Controller$executeRequest$1.call(Controller.kt:7)

	at __. user = jonnyzzz .__.call(JavaGeneratorTemplate.java:39)

	at com.jonnyzzz.blog.example.web.Controller.executeRequest(Controller.kt:11)
	at com.jonnyzzz.blog.example.EnterpriseAppKt.main(EnterpriseApp.kt:13)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This one now includes the sensible information (as service name and userId)
which can be used to debug the original problem.&lt;/p&gt;

&lt;h1 id=&quot;api&quot;&gt;API&lt;/h1&gt;

&lt;p&gt;Named stack frames API is easy and flexible. 
The main entry point is &lt;code&gt;org.jonnyzzz.stack.NamedStackFrame&lt;/code&gt;. There you may use either &lt;code&gt;#global()&lt;/code&gt; method to access 
statically cached factory of named framed. 
The better is to use &lt;code&gt;#newInstance()&lt;/code&gt; method to have an instance of the factory to explicitly control the lifetime.&lt;/p&gt;

&lt;p&gt;Both methods return an instance of &lt;code&gt;org.jonnyzzz.stack.NamedExecutor&lt;/code&gt; interface, which contains all possible methods to wrap
a call with a named frame.&lt;/p&gt;

&lt;h1 id=&quot;implementation&quot;&gt;Implementation&lt;/h1&gt;

&lt;p&gt;The implementation is covered in &lt;a href=&quot;/blog/2014/04/26/named-stack-frames-for-jvm/&quot;&gt;the older post&lt;/a&gt;. Note, the
API is slightly changed in 0.2.x.&lt;/p&gt;

&lt;p&gt;The idea is to on-the-fly generate classes for every given name. All generated classes are loaded with a dedicated
classloader and cached.&lt;/p&gt;

&lt;p&gt;We implement our own class file weaver to avoid external dependencies from other libraries and thus to
simplify adoption of this library in your project.&lt;/p&gt;

&lt;p&gt;The library attempts to escape some &lt;em&gt;bad&lt;/em&gt; symbols from names you pass. All such symbols are replaced with ‘_’.&lt;/p&gt;

&lt;h1 id=&quot;namedstackframe-costs&quot;&gt;NamedStackFrame Costs&lt;/h1&gt;

&lt;p&gt;Custom information in stack traces is not free. We create and load classes to implement it. This means, 
it’s your responsibility to make sure you will not consume all JVM memory on that.&lt;/p&gt;

&lt;p&gt;Practically, you should understand the number of possible names is limited and fits in the memory. That’s it.&lt;/p&gt;

&lt;h1 id=&quot;profiler-grouping-of-calls&quot;&gt;Profiler Grouping of Calls&lt;/h1&gt;

&lt;p&gt;Do you use a profiler to monitor your application? A profiler presents such named 
methods (just like ordinary methods) as different method calls. That means you’ll see a distribution of calls.&lt;/p&gt;

&lt;p&gt;You’ll see a distribution of time spent by each name: a distribution by &lt;code&gt;userId&lt;/code&gt;, &lt;code&gt;action type&lt;/code&gt; or &lt;code&gt;serviceId&lt;/code&gt;
for the example above.&lt;/p&gt;

&lt;h1 id=&quot;android-support&quot;&gt;Android Support&lt;/h1&gt;

&lt;p&gt;All the time I was wondering if it’s helpful for Android applications as well. Do you like the idea?
Please contribute!&lt;/p&gt;

&lt;h1 id=&quot;license&quot;&gt;License&lt;/h1&gt;

&lt;p&gt;The library is &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;download&quot;&gt;Download&lt;/h1&gt;

&lt;p&gt;Sources are on &lt;a href=&quot;https://github.com/jonnyzzz/named-java-frames&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Binaries are on JCenter / Bintray&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/jonnyzzz/maven/named-frames/_latestVersion&quot;&gt; &lt;img src=&quot;https://api.bintray.com/packages/jonnyzzz/maven/named-frames/images/download.svg&quot; alt=&quot;Download&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/jonnyzzz/named-java-frames&quot;&gt; &lt;img src=&quot;https://travis-ci.org/jonnyzzz/named-java-frames.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Gradle, just add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;repositories {
  jcenter()
}

dependencies {
  compile 'org.jonnyzzz.named-frames:named-frames:&amp;lt;LATEST VERSION&amp;gt;'
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;issues&quot;&gt;Issues&lt;/h1&gt;

&lt;p&gt;On &lt;a href=&quot;https://github.com/jonnyzzz/named-java-frames&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;</content>

  
  
  
  
  

    <author>
      <name>Eugene Petrenko</name>
    </author>

  
    <category term="jvm" />
  
    <category term="debug" />
  
    <category term="trace" />
  
    <category term="library" />
  
    <category term="opensource" />
  
    <category term="stacktrace" />
  
    <category term="frame" />
  
    <category term="stack" />
  
    <category term="java" />
  
    <category term="named-stack-frames" />
  
    <summary type="html">Encode context in a thread dump or an exception stack trace for the JVM.</summary>
  
  </entry>
  
</feed>
